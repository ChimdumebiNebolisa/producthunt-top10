import jsPDF from 'jspdf';

export interface ProductHuntPost {
  name: string;
  tagline: string;
  votesCount: number;
  createdAt: string;
  url: string;
}

export const exportToPDF = (posts: ProductHuntPost[], sortField: string, sortDirection: string) => {
  const doc = new jsPDF();
  
  // Set up the document
  doc.setFontSize(20);
  doc.setFont('helvetica', 'bold');
  doc.text('Product Hunt Top 10 Analysis', 20, 30);
  
  // Add subtitle
  doc.setFontSize(12);
  doc.setFont('helvetica', 'normal');
  doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 40);
  doc.text(`Sorted by: ${sortField} (${sortDirection})`, 20, 47);
  doc.text(`Data from: Past 10 days`, 20, 54);
  
  // Add a line separator
  doc.setLineWidth(0.5);
  doc.line(20, 60, 190, 60);
  
  // Set up table headers
  doc.setFontSize(10);
  doc.setFont('helvetica', 'bold');
  
  const startY = 70;
  const colWidths = [15, 60, 50, 20, 25];
  const headers = ['Rank', 'Product Name', 'Tagline', 'Votes', 'Launch Date'];
  
  // Draw table headers
  let currentX = 20;
  headers.forEach((header, index) => {
    doc.rect(currentX, startY, colWidths[index], 8);
    doc.text(header, currentX + 2, startY + 5);
    currentX += colWidths[index];
  });
  
  // Add data rows
  doc.setFont('helvetica', 'normal');
  let currentY = startY + 8;
  
  posts.forEach((post, index) => {
    // Check if we need a new page
    if (currentY > 280) {
      doc.addPage();
      currentY = 20;
    }
    
    currentX = 20;
    const rowData = [
      (index + 1).toString(),
      post.name.length > 25 ? post.name.substring(0, 25) + '...' : post.name,
      post.tagline.length > 30 ? post.tagline.substring(0, 30) + '...' : post.tagline,
      post.votesCount.toLocaleString(),
      new Date(post.createdAt).toLocaleDateString()
    ];
    
    rowData.forEach((data, colIndex) => {
      doc.rect(currentX, currentY, colWidths[colIndex], 8);
      doc.text(data, currentX + 2, currentY + 5);
      currentX += colWidths[colIndex];
    });
    
    currentY += 8;
  });
  
  // Add summary statistics
  doc.setFontSize(12);
  doc.setFont('helvetica', 'bold');
  doc.text('Summary Statistics', 20, currentY + 20);
  
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  
  const totalVotes = posts.reduce((sum, post) => sum + post.votesCount, 0);
  const avgVotes = Math.round(totalVotes / posts.length);
  const highestVotes = Math.max(...posts.map(post => post.votesCount));
  const lowestVotes = Math.min(...posts.map(post => post.votesCount));
  
  doc.text(`Total Votes: ${totalVotes.toLocaleString()}`, 20, currentY + 30);
  doc.text(`Average Votes: ${avgVotes.toLocaleString()}`, 20, currentY + 37);
  doc.text(`Highest Votes: ${highestVotes.toLocaleString()}`, 20, currentY + 44);
  doc.text(`Lowest Votes: ${lowestVotes.toLocaleString()}`, 20, currentY + 51);
  
  // Add footer
  doc.setFontSize(8);
  doc.text('Generated by Product Hunt Top 10 Viewer', 20, 290);
  doc.text(`https://github.com/ChimdumebiNebolisa/producthunt-top10`, 20, 295);
  
  // Save the PDF
  const fileName = `producthunt-top10-${new Date().toISOString().split('T')[0]}.pdf`;
  doc.save(fileName);
};
